# Generated by Django 5.0.6 on 2024-06-25 14:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AudioFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('audio_file', models.FileField(upload_to='audio_files/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('preferences', models.JSONField(blank=True, default=dict)),
                ('public', models.BooleanField(default=False)),
                ('is_premium', models.BooleanField(default=False)),
                ('premium_start_date', models.DateTimeField(blank=True, null=True)),
                ('premium_end_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transcription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(blank=True, max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('composer', models.CharField(blank=True, max_length=200)),
                ('player', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed')], default='PENDING', max_length=50)),
                ('public', models.BooleanField(default=False)),
                ('rating', models.FloatField(default=0.0)),
                ('num_ratings', models.IntegerField(default=0)),
                ('audio_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tunescript_app.audiofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SheetMusic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf_file', models.FileField(upload_to='pdf_files/')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('transcription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tunescript_app.transcription')),
            ],
        ),
        migrations.CreateModel(
            name='MIDIFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('midi_file', models.FileField(upload_to='midi_files/')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('transcription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tunescript_app.transcription')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('transcription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tunescript_app.transcription')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('transcription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='tunescript_app.transcription')),
            ],
            options={
                'unique_together': {('transcription', 'user')},
            },
        ),
        migrations.CreateModel(
            name='TranscriptionTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcription_tags', to='tunescript_app.tag')),
                ('transcription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcription_tags', to='tunescript_app.transcription')),
            ],
            options={
                'unique_together': {('transcription', 'tag')},
            },
        ),
    ]
