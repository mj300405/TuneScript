version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: tunescript_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    networks:
      - tunescript-network

  redis:
    image: redis:alpine
    networks:
      - tunescript-network

  web:
    build:
      context: ..
      dockerfile: devtools/Dockerfile.backend
    command: >
      sh -c "poetry run python manage.py makemigrations tunescript_app &&
             poetry run python manage.py migrate &&
             poetry run python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ../backend:/app
      - ../backend/staticfiles:/app/staticfiles
      - ../backend/media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgres://root:root@db:5432/tunescript_db
      - REDIS_URL=redis://redis:6379/0
      - DISPLAY=:99
      - FRONTEND_WEBHOOK_URL=http://frontend:3000/api/sse-stream
      - WEBHOOK_SECRET=your-very-secure-secret
    networks:
      - tunescript-network

  celery:
    build:
      context: ..
      dockerfile: devtools/Dockerfile.backend
    command: poetry run celery -A tunescript_project worker --loglevel=info
    volumes:
      - ../backend:/app
      - ../backend/staticfiles:/app/staticfiles
      - ../backend/media:/app/media
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgres://root:root@db:5432/tunescript_db
      - REDIS_URL=redis://redis:6379/0
      - DISPLAY=:99
      - FRONTEND_WEBHOOK_URL=http://frontend:3000/api/sse-stream
      - WEBHOOK_SECRET=your-very-secure-secret
    networks:
      - tunescript-network

  frontend:
    build:
      context: ..
      dockerfile: devtools/Dockerfile.frontend
    ports:
      - "3000:3000"
    depends_on:
      - web
    environment:
      - NEXT_PUBLIC_API_URL=http://web:8000/graphql/
      - WEBHOOK_SECRET=your-very-secure-secret
      - BACKEND_SSE_URL=http://web:8000/sse-stream/
    networks:
      - tunescript-network

volumes:
  postgres_data:
  media:

networks:
  tunescript-network:
    driver: bridge
